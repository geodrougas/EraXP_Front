@using System.ComponentModel.DataAnnotations
@using EraXp.Frontend.Models.Dto
@inject HttpClient client
@inject ISnackbar snackbar

<EditForm Model="Form" OnValidSubmit="Create">
    <DataAnnotationsValidator/>
    <MudDialog>
        <DialogContent>
            <MudTextField T="string?" For="() => Form.Name" @bind-Text="@Form.Name" Label="Name"/>
            <MudTextField T="string?" For="() => Form.Lastname" @bind-Text="@Form.Lastname" Label="Lastname"/>
            <MudTextField T="string?" For="() => Form.Email" @bind-Text="@Form.Email" Label="Email"/>
            <MudTextField T="string?" For="() => Form.PhoneNumber" @bind-Text="@Form.PhoneNumber" Label="PhoneNumber"/>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Outlined" OnClick="@Cancel">Cancel</MudButton>
            <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit">Create</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public string UniversityId { get; set; }
    
    [Parameter]
    public string DepartmentId { get; set; }

    class CourseForm
    {
        [Required]
        public string? Name { get; set; }
        [Required]
        public string? Lastname { get; set; }
        [Required]
        [EmailAddress]
        public string? Email { get; set; }
        [Required]
        [Phone]
        public string? PhoneNumber { get; set; }
    }

    CourseForm Form { get; set; } = new CourseForm();

    public void Cancel()
    {
        MudDialog.Cancel();
    }

    public async Task Create()
    {
        try
        {
            ContactDto contactDto = new ContactDto(
                null,
                Guid.Parse(DepartmentId),
                Form.Name,
                Form.Lastname,
                Form.Email,
                Form.PhoneNumber
            );
            HttpResponseMessage response = await client.PostAsJsonAsync($"university/{UniversityId}/department/{DepartmentId}/contact", contactDto);

            if (!response.IsSuccessStatusCode)
            {
                snackbar.Add("Failed to add the contact", Severity.Error);
                return;
            }
            
            snackbar.Add("Contact added successfully", Severity.Success);
            MudDialog.Cancel();
        }
        catch (Exception ex)
        {
            snackbar.Add("Failed to add the contact", Severity.Error);
        }
    }
}
